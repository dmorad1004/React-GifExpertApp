{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","seTinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","console","log","useFecthGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OAEI,0BAAMC,SAdU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAUd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAvBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAMTA,EAAKC,OANI,uBAKfC,EALe,EAKfA,KAGEC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,yBAAKc,UAAU,0CACf,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCFAO,EAAU,SAAC,GAEjB,IADHnB,EACE,EADFA,SACE,ECH0B,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAItB,CAACpB,IAEIqB,EDdqBO,CAAa5B,GAA7Ba,EAHd,EAGSN,KAAYa,EAHrB,EAGqBA,QAInB,OACI,oCACA,wBAAIJ,UAAU,wCAAyChB,GACtDoB,GAAW,sCACX,yBAAKJ,UAAU,aAGRH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACAmB,IAAKnB,EAAIC,IACLD,UEWboB,EA7BK,WAAO,IAAD,EAGc5C,mBAAS,CAAC,oBAHxB,mBAGf6C,EAHe,KAGH9C,EAHG,KAKtB,OACI,oCAEI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAGI8C,EAAWtB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACA6B,IAAM7B,EACNA,SAAWA,U,MClB7BgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.f06fcfe3.chunk.js","sourcesContent":["import React,{useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, seTinputValue] = useState('');\r\n\r\n    const handleInputChange= (e)=> {\r\n        seTinputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit= (e)=> {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){ \r\n            setCategories(cats=>[inputValue,...cats,]);\r\n            seTinputValue('');\r\n        }\r\n       \r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=WjjJBESv442XE5BucWPN0iFiRB78lQ6D`;\r\n    const resp = await fetch(url);\r\n    const {\r\n        data\r\n    } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src={url} alt={title} />\r\n        <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({\r\n    category\r\n}) => {\r\n\r\n\r\n        const {data:images,loading}=useFecthGifs(category);\r\n\r\n\r\n   \r\n        return (\r\n            <>\r\n            <h3 className=\" animate__animated animate__fadeInUp\">{ category }</h3>\r\n            {loading && <p>Loading</p>}\r\n             <div className='card-grid'>\r\n        \r\n                {\r\n                    images.map ((img)=>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img} // propiedades de manera independiente\r\n\r\n                         />\r\n                    ))\r\n                }\r\n            \r\n            </div> \r\n            </>\r\n        )\r\n\r\n    \r\n}","import {useState,useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n    \r\n    export const useFecthGifs = (category) => {\r\n\r\n        const [state, setstate] = useState({\r\n            data:[],\r\n            loading:true,\r\n        });\r\n\r\n        useEffect(()=>{\r\n\r\n            getGifs(category)\r\n                .then(imgs=>{\r\n                    console.log(imgs);\r\n                    setstate({\r\n                        data:imgs,\r\n                        loading:false,\r\n                    })\r\n                });\r\n\r\n        },[category]);\r\n\r\n        return state; //{data:[],loading:true};\r\n    }","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp= () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Attack On Titan']);\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n               {\r\n               \r\n                categories.map(category=>(\r\n                  <GifGrid \r\n                  key={ category}\r\n                  category={ category } \r\n                    />\r\n\r\n                 ))\r\n               }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}